

pipeline {
    agent {
        docker {
            image 'node:8.16.0-alpine'
        }
    }
    
    
      tools {
        nodejs 'NodeJS 8.9.0' 
    }

    stages {
        stage('build') {


            when{
                changeset "**/result/**"
            }


            steps {
                echo 'Compiling result app'
                dir('result') {
                    sh 'npm install'

                }
                
            }
        } 
        stage('test') {

            when {
                
                changeset "**/result/**"
            }
            steps {
                echo 'Running Unit Test on result app'
                   dir('result') {
                    sh 'npm install'
                    sh 'npm test'

                }
                
            }
        }

        stage('docker-package') {

            agent any
      
            steps {
                echo 'Packaging worket app with docker'

                script{
                         docker.withRegistry('https://index.docker.io/v1', 'dockerhub') {
                         def workerImage = docker.build("firebrand01/worker:v${env.BUILD_ID}", "./results")
                         workerImage.push()
                         workerImage.push("${env.BRANCH_NAME}")

      
                             }
                }
                
            }
        } 
        
    }


/*     
    post {
        always {
            echo 'Build pipeline for worker run is complete..'
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL} | Open>)")
        }

        success {
            slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL} | Open>)")
        }



        }    */
    
    
}
